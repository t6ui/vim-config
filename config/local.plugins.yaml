---
# PLUGINS
# ==========================================

# Startup
# -------
- repo: mhinz/vim-startify
  hook_add: |
    let g:startify_session_dir = '$VARPATH/session'
    let g:startify_enable_special      = 0
    let g:startify_relative_path       = 1
    let g:startify_change_to_dir       = 1  "default 1
    let g:startify_change_to_vcs_root  = 1  "default 0
    let g:startify_update_oldfiles     = 1
    let g:startify_session_autoload    = 1
    let g:startify_session_persistence = 1
    let g:startify_session_sort = 1
    let g:startify_bookmarks = [
      \ { 'c': '~/.dotfiles/vim/vimrc.symlink' },
      \ '~/aosp',
      \ ]
    let g:startify_skiplist = [
      \ 'COMMIT_EDITMSG',
      \ 'bundle/.*/doc',
      \ '/data/repo/neovim/runtime/doc',
      \ '/Users/mhi/local/vim/share/vim/vim74/doc',
      \ ]
    let g:startify_lists = [
      \ { 'type': 'sessions',  'header': ['   Sessions']       },
      \ { 'type': 'files',     'header': ['   MRU']            },
      \ { 'type': 'dir',       'header': ['   MRU '. getcwd()] },
      \ ]
    let g:startify_session_before_save = [
      \ 'echo "Cleaning up before saving.."',
      \ 'silent! BookmarkSave'
      \ ]


# Lazy Loading
# ==========================================

# Languages
# ---------
- repo: octol/vim-cpp-enhanced-highlight
  on_ft: cpp
  hook_add: |
    let g:cpp_class_scope_highlight = 1
    let g:cpp_member_variable_highlight = 1
    let g:cpp_class_decl_highlight = 1
    let g:cpp_experimental_simple_template_highlight = 1
    let g:cpp_concepts_highlight = 1
    let g:cpp_no_function_highlight = 1


# Search
# ---------
- repo: mhinz/vim-grepper
  on_map: {nxv: <Plug>(GrepperOperator}
  on_cmd: Grepper
  #  hook_add: |
    # let g:ackprg = 'ag --nogroup --nocolor --column --hidden --ignore tags'
    # let g:ackprg = 'ag --vimgrep' " Which has the same effect but will report
    # every match on the line.
    # let g:grepper = {
    # \ 'tools': ['rg', 'ag', 'grep', 'vimgrep', 'git'],
    # \ 'vimgrep': {
    # \   'grepprg':    "vim -es +'vimgrep /$*/ ** | cw | %p | qa'",
    # \   'grepprgbuf': "vim -es +'vimgrep /$*/ $. | cw | %p | qa'",
    # \   'grepformat': '%f|%l col %c|%m'
    # \ }}
    # on my work computer, ag doesn't suppport --vimgrep parameter.
    # let g:grepper = {
    #       \ 'tools': ['rg', 'ag', 'grep', 'vimgrep', 'git'],
    #       \ 'ag': { 'grepprg':    'ag --nogroup --nocolor --column --hidden
    #       \ --ignore .tags',
    #       \         'grepformat': '%f:%l:%c:%m,%f:%l:%m',
    #       \         'escape':     '\^$.*+?()[]{}|' },
    #       \ 'vimgrep': {
    #       \   'grepprg':    "vim -es +'vimgrep /$*/ ** | cw | %p | qa'",
    #       \   'grepprgbuf': "vim -es +'vimgrep /$*/ $. | cw | %p | qa'",
    #       \   'grepformat': '%f|%l col %c|%m'
    #       \ }}
    # let g:grepper.highlight = 1
    # let g:grepper.rg.grepprg .= ' --smart-case'
    # let g:grepper.rg.grepprg .= ' --hidden'

- repo: wsdjeg/FlyGrep.vim

- repo: kassio/neoterm
  hook_add: |
    let g:neoterm_default_mod = "botright"

- repo: Shougo/deol.nvim
  hook_add: |
    let g:deol#prompt_pattern = '% \|%$'

- repo: tpope/vim-dispatch
- repo: w0rp/ale

#  vim: set ts=2 sw=2 tw=80 et :
